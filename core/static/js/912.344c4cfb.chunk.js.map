{"version":3,"file":"static/js/912.344c4cfb.chunk.js","mappings":"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","sources":["context/collectionsReducer/actions.ts","pages/SavedPostsFeed/SavedPostsFeed.tsx","pages/SavedPostsFeed/index.ts"],"sourcesContent":["import axios from \"axios\";\nimport {Dispatch} from \"@reduxjs/toolkit\";\nimport {collectionsReducer} from \"./reducer\";\nimport {postsReducer} from \"../postsReducer/reducer\";\n\nexport const createNewCollection = (collectionName: string) => {\n  return async (dispatch: Dispatch) => {\n    const { addCollection } = collectionsReducer.actions;\n    const formData = new FormData();\n    formData.append(\"collection_name\", collectionName);\n\n    const res = await axios.post(\"http://127.0.0.1:8000/api/collection/create\", formData);\n    const data = res.data;\n\n    dispatch(addCollection(data));\n  }\n}\n\nexport const getCollections = () => {\n  return async (dispatch: Dispatch) => {\n    const { setCollections } = collectionsReducer.actions;\n    const res = await axios.post(\"http://127.0.0.1:8000/api/collections/get\");\n    const data = res.data;\n\n    if (data.length) {\n      dispatch(setCollections(data));\n    }\n  }\n}\n\nexport const deleteCollection = (id: number) => {\n  return async (dispatch: Dispatch) => {\n    const formData = new FormData();\n    const { removeCollection } = collectionsReducer.actions;\n    formData.append(\"collection_id\", String(id));\n    const res = await axios.post(\"http://127.0.0.1:8000/api/collection/delete\", formData)\n    const data = res.data;\n\n    if (data.status === \"ok\") {\n      dispatch(removeCollection(id));\n    }\n  }\n}\n\nexport const renameCollection = (id: number, name: string) => {\n  return async (dispatch: Dispatch) => {\n    const formData = new FormData();\n    const { renameCollection } = collectionsReducer.actions;\n\n    formData.append(\"collection_id\", String(id));\n    formData.append(\"collection_name\", name);\n\n    const res = await axios.post(\"http://127.0.0.1:8000/api/collection/rename\", formData);\n    const data = res.data;\n\n    if (data.status === \"ok\") {\n      dispatch(renameCollection({id: Number(id), name: name}));\n    }\n  }\n}\n\nexport const getCollectionsPosts = (id: number, page: number) => {\n  return async (dispatch: Dispatch) => {\n    const formData = new FormData();\n    const { addPosts, setHasNextPage } = collectionsReducer.actions;\n    formData.append(\"collection_id\", String(id));\n    formData.append(\"page\", String(page));\n\n    const res = await axios.post(\"http://127.0.0.1:8000/api/collection/get\", formData);\n    const data = res.data;\n\n    dispatch(addPosts({id: Number(id), posts: data.posts}));\n\n    if (!data.hasNextPage) {\n      dispatch(setHasNextPage({id: Number(id), value: data.hasNextPage}));\n    }\n  }\n}\n","import {useAppDispatch, useAppSelector} from \"hooks/redux\";\nimport Header from \"components/Header\";\nimport PostsFeed from \"components/PostsFeed\";\nimport {useParams} from \"react-router-dom\";\nimport {useEffect, useMemo, useState} from \"react\";\nimport {getCollections, getCollectionsPosts} from \"context/collectionsReducer/actions\";\n\nconst SavedPostsFeed = () => {\n  const windowWidth = useAppSelector(state => state.appReducer.width);\n\n  const params = useParams();\n  const id = useMemo(() => {\n    return params.id === \"all-posts\" ? 0 : Number(params.id)\n  }, [params.id])\n  const collections = useAppSelector(state => state.collectionsReducer);\n  const collection = collections.find(item => {\n    return item.id === id\n  })!\n\n  const posts = collection?.posts.posts;\n  const hasNextPage = collection?.posts.hasNextPage;\n  const [page, setPage] = useState<number>(Math.floor(posts?.length / 12) || 0);\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    document.addEventListener(\"scroll\", fetchOnScroll);\n\n    if (collections.length === 0) {\n      dispatch(getCollections());\n    }\n\n    if (!posts) {\n      setIsFetching(true);\n    }\n\n    return () => {\n      document.removeEventListener(\"scroll\", fetchOnScroll);\n    }\n  }, []);\n\n  const fetchOnScroll = () => {\n    let scrollHeight = document.documentElement.scrollHeight,\n      scrollTop = document.documentElement.scrollTop,\n      innerHeight = window.innerHeight;\n\n    if (scrollHeight - (scrollTop + innerHeight) < 500 && hasNextPage && !isFetching) {\n      setIsFetching(true);\n    }\n  }\n\n  useEffect(() => {\n    if (!isFetching || !hasNextPage) {\n      return;\n    }\n    fetchPosts();\n  }, [isFetching, hasNextPage]);\n\n  const fetchPosts = async () => {\n    dispatch(getCollectionsPosts(collection.id, page));\n\n    setPage(prev => prev + 1);\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 100);\n  }\n\n  return (\n    <>\n      {windowWidth < 640 &&\n        <Header>Посты</Header>\n      }\n      {posts?.length ?\n        <PostsFeed posts={posts}/>\n      :\n        <></>\n      }\n    </>\n  );\n}\n\nexport default SavedPostsFeed;\n","import SavedPostsFeed from \"./SavedPostsFeed\";\n\nexport default SavedPostsFeed;\n"],"names":["createNewCollection","collectionName","dispatch","addCollection","collectionsReducer","formData","FormData","append","axios","res","data","getCollections","setCollections","length","deleteCollection","id","removeCollection","String","status","renameCollection","name","Number","getCollectionsPosts","page","addPosts","setHasNextPage","posts","hasNextPage","value","windowWidth","useAppSelector","state","appReducer","width","params","useParams","useMemo","collections","collection","find","item","useState","Math","floor","setPage","isFetching","setIsFetching","useAppDispatch","useEffect","document","addEventListener","fetchOnScroll","removeEventListener","documentElement","scrollHeight","scrollTop","window","innerHeight","fetchPosts","prev","setTimeout","Header","PostsFeed"],"sourceRoot":""}