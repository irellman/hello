{"version":3,"file":"static/js/543.ce7d40b1.chunk.js","mappings":"oKACA,EAA4B,yBAA5B,EAA6D,qBAA7D,EAAgG,2BAAhG,EAAmI,qBAAnI,EAAsK,2B,SCCtK,ECSc,SAAC,GAAmD,IAAjDA,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAC7C,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAQC,EAAAA,EAAAA,QAAY,MAmB1B,OAjBAC,EAAAA,EAAAA,YAAU,WACoB,IAAD,EAAxBF,GAASF,IACV,UAAAE,EAAMG,eAAN,SAAeC,QACfJ,EAAMG,QAAQE,aAAa,aAAeL,EAAMG,QAAQG,gBAAgB,eAEzE,CAACR,KAQJI,EAAAA,EAAAA,YAAU,WACRF,EAAMG,QAAQG,gBAAgB,cAC7B,KAGD,iBAAKC,UAAWC,EAAkBC,QAAS,kBAAMV,GAAiB,IAAlE,WACE,gBAAKQ,UAAaf,EAAQgB,EAAqBA,EAA/C,SAA8Dd,KAC9D,kBACEa,UAAaf,EAAQgB,EAAqBA,EAC1Cb,KAAMA,EACNH,MAAOA,EACPI,KAAMA,EACNH,SAAU,SAACiB,GAAD,OAAOjB,EAASiB,EAAEC,OAAOnB,QACnCoB,IAAKZ,EACLa,UAAQ,EACRC,aAAa,MACbC,OAAQ,WArBPvB,GACHO,GAAiB,W,uKCwDvB,EA1Ee,WACb,OAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOmB,EAAP,KAAcC,EAAd,KACA,GAAgCpB,EAAAA,EAAAA,UAAS,IAAzC,eAAOqB,EAAP,KAAiBC,EAAjB,KACA,GAAgCtB,EAAAA,EAAAA,UAAS,IAAzC,eAAOuB,EAAP,KAAiBC,EAAjB,KACA,GAAwDxB,EAAAA,EAAAA,UAAS,IAAjE,eAAOyB,EAAP,KAA6BC,EAA7B,KACA,GAAsC1B,EAAAA,EAAAA,WAAS,GAA/C,eAAO2B,EAAP,KAAoBC,EAApB,KAEMC,GAAwBC,EAAAA,EAAAA,UAAQ,WACpC,QAAIX,GAASE,GAAYE,GAAYE,GAAwBF,IAAaE,KAKzE,CAACN,EAAOE,EAAUE,EAAUE,IAbZ,wCAenB,kFACMI,EADN,kEAKoBE,EAAAA,EAAAA,IAAOV,EAAUF,EAAOI,EAAUE,GALtD,cAOSO,KAAKC,SACVL,GAAe,GARnB,4CAfmB,sBA+BnB,OAJAvB,EAAAA,EAAAA,YAAU,WACR6B,SAASC,MAAQ,wFAChB,KAGe,IAAhBR,GACE,4BACE,gBAAKjB,UAAWC,EAAAA,EAAAA,MAAhB,iFACA,iBAAKD,UAAWC,EAAAA,EAAAA,OAAhB,WACE,SAACyB,EAAA,EAAD,CACEzC,MAAOwB,EACPvB,SAAUwB,EACVvB,MAAM,mIACNC,KAAK,QACLC,KAAK,WAEP,SAACqC,EAAA,EAAD,CACEzC,MAAO0B,EACPzB,SAAU0B,EACVzB,MAAM,8FACNC,KAAK,OACLC,KAAK,cAEP,SAACqC,EAAA,EAAD,CACEzC,MAAO4B,EACP3B,SAAU4B,EACV3B,MAAM,uCACNC,KAAK,WACLC,KAAK,cAEP,SAACqC,EAAA,EAAD,CACEzC,MAAO8B,EACP7B,SAAU8B,EACV7B,MAAM,sHACNC,KAAK,WACLC,KAAK,0BAEP,gBAAKW,UAAWmB,EAAwBlB,EAAAA,EAAAA,eAAwBA,EAAAA,EAAAA,OAAeC,QAAS,kBAhE7E,0CAgEmFyB,IAA9F,8HAEF,gBAAK3B,UAAWC,EAAAA,EAAAA,GAAhB,iCACA,iBAAKD,UAAWC,EAAAA,EAAAA,OAAhB,sGAAiD,SAAC,KAAD,CAAMD,UAAWC,EAAAA,EAAAA,KAAa2B,GAAG,cAAjC,wDAAjD,WAGF,+iBC1EN,K,mBCDA,KAAgB,UAAY,wBAAwB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,qBAAqB,OAAS,qBAAqB,eAAiB,6BAA6B,GAAK,iBAAiB,OAAS,qBAAqB,KAAO","sources":["webpack://frontend/./src/components/Input/Input.module.scss?f352","components/Input/index.ts","components/Input/Input.tsx","pages/Auth/Singup/Signup.tsx","pages/Auth/Singup/index.ts","webpack://frontend/./src/pages/Auth/Auth.module.scss?1648"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Input_container__5Fi8L\",\"label\":\"Input_label__usdRL\",\"label_small\":\"Input_label_small__yU2si\",\"field\":\"Input_field__ov2Ns\",\"field_small\":\"Input_field_small__rSggH\"};","import Input from \"./Input\";\n\nexport default Input;","import { useEffect, useRef, useState } from \"react\";\nimport styles from \"./Input.module.scss\";\n\ninterface props {\n  value: string,\n  onChange: (value: string) => void,\n  label: string,\n  type: string,\n  name: string\n}\n\nconst Input = ({ value, onChange, label, type, name }: props) => {\n  const [inputIsActive, setInputIsActive] = useState(false);\n  const input = useRef<any>(null);\n\n  useEffect(() => {\n    if(input && inputIsActive) {\n      input.current?.focus();\n      input.current.hasAttribute('readonly') && input.current.removeAttribute('readonly');\n    }\n  }, [inputIsActive]);\n\n  function unFocus(): void {\n    if (!value) {\n      setInputIsActive(false);\n    }\n  }\n\n  useEffect(() => {\n    input.current.removeAttribute('readonly')\n  }, []);\n\n  return (\n    <div className={styles.container} onClick={() => setInputIsActive(true)}>\n      <div className={!!value ? styles.label_small : styles.label}>{label}</div>\n      <input\n        className={!!value ? styles.field_small : styles.field}\n        type={type}\n        value={value}\n        name={name}\n        onChange={(e) => onChange(e.target.value)}\n        ref={input}\n        readOnly\n        autoComplete=\"off\"\n        onBlur={() => unFocus()}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { signup } from \"api/user\";\nimport Input from \"components/Input\";\nimport styles from \"../Auth.module.scss\";\nimport {Link} from \"react-router-dom\";\n\nconst Signup = () => {\n  const [email, setEmail] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\")\n  const [verifyEmail, setVerifyEmail] = useState(false)\n\n  const submitButtonIsDisable = useMemo(() => {\n    if (email && username && password && passwordConfirmation && password === passwordConfirmation) {\n      return false\n    }\n\n    return true\n  }, [email, username, password, passwordConfirmation])\n\n  async function submit() {\n    if (submitButtonIsDisable) {\n      return\n    }\n\n    const res = await signup(username, email, password, passwordConfirmation)\n    \n    if(res.data.success) {\n      setVerifyEmail(true)\n    }\n  }\n\n  useEffect(() => {\n    document.title = \"Регистрация • Instagram\"\n  }, [])\n\n  return (\n    verifyEmail === false ?\n      <div>\n        <div className={styles.title}>Регистрация</div>\n        <div className={styles.signup}>\n          <Input\n            value={email}\n            onChange={setEmail}\n            label=\"Адрес электронной почты\"\n            type=\"email\"\n            name=\"email\"\n          />\n          <Input\n            value={username}\n            onChange={setUsername}\n            label=\"Имя пользователя\"\n            type=\"text\"\n            name=\"username\"\n          />\n          <Input\n            value={password}\n            onChange={setPassword}\n            label=\"Пароль\"\n            type=\"password\"\n            name=\"password\"\n          />\n          <Input\n            value={passwordConfirmation}\n            onChange={setPasswordConfirmation}\n            label=\"Подтверждение пароля\"\n            type=\"password\"\n            name=\"passwordConfirmation\"\n          />\n          <div className={submitButtonIsDisable ? styles.button_disable : styles.button} onClick={() => submit()}>Зарегистрироваться</div>\n        </div>\n        <div className={styles.or}>Или</div>\n        <div className={styles.footer}>Уже есть аккаунт? <Link className={styles.link} to=\"/auth/login\">Войдите</Link>!</div>\n      </div>\n    :\n      <div>Мы отправили письмо на ваш электронный адрес! Пройдите по ссылке в нём, чтобы активировать ваш аккаунт!</div>\n  )\n}\n\nexport default Signup\n","import Signup from './Signup'\n\nexport default Signup","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Auth_container__ORcsl\",\"form\":\"Auth_form__ziq4J\",\"title\":\"Auth_title__wDiyr\",\"login\":\"Auth_login__txM8P\",\"signup\":\"Auth_signup__hpa6c\",\"button\":\"Auth_button__OWZOh\",\"button_disable\":\"Auth_button_disable__Fmpj-\",\"or\":\"Auth_or__ecrQl\",\"footer\":\"Auth_footer__PnlGF\",\"link\":\"Auth_link__AEqne\"};"],"names":["value","onChange","label","type","name","useState","inputIsActive","setInputIsActive","input","useRef","useEffect","current","focus","hasAttribute","removeAttribute","className","styles","onClick","e","target","ref","readOnly","autoComplete","onBlur","email","setEmail","username","setUsername","password","setPassword","passwordConfirmation","setPasswordConfirmation","verifyEmail","setVerifyEmail","submitButtonIsDisable","useMemo","signup","data","success","document","title","Input","submit","to"],"sourceRoot":""}