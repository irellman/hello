{"version":3,"file":"static/js/717.104858d0.chunk.js","mappings":"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","sources":["components/icons/FilledHeartIcon.tsx","webpack://frontend/./src/components/Like/Like.module.scss?2aaf","components/Like/index.ts","components/Like/Like.tsx","components/Post/Comments/Comment/CommentLogic.tsx","webpack://frontend/./src/components/Post/Comments/Comment/Comment.module.scss?03e4","webpack://frontend/./src/components/Post/Comments/Comment/Answer/Answer.module.scss?5ac9","components/Post/Comments/Comment/Answer/Answer.tsx","components/Post/Comments/Comment/Answer/index.ts","components/Post/Comments/Comment/index.ts","components/Post/Comments/Comment/Comment.tsx"],"sourcesContent":["import { FC } from \"react\";\n\ninterface props {\n  className?: string,\n  size: number,\n  color: string\n}\n\nconst FilledHeartIcon: FC<props> = ({ className, size, color }) => {\n  return (\n    <svg\n      className={className}\n      color={color}\n      fill={color}\n      role=\"img\"\n      viewBox=\"0 0 48 48\"\n      height={size}\n      width={size}\n    >\n      <path\n        d=\"M34.6 3.1c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5s1.1-.2 1.6-.5c1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"\n      />\n    </svg>\n  )\n}\n\nexport default FilledHeartIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Like_container__44F36\",\"container_active\":\"Like_container_active__EqCDA\",\"like\":\"Like_like__drx1f\",\"heart_container\":\"Like_heart_container__5Tg3u\",\"filled_heart\":\"Like_filled_heart__5TOj6\",\"show\":\"Like_show__HKhBo\",\"heart\":\"Like_heart__lxZBU\",\"value\":\"Like_value__HOGOg\"};","import Like from \"./Like\";\n\nexport default Like;","import {FC, useEffect, useState} from \"react\";\nimport HeartIcon from \"../icons/HeartIcon\";\nimport FilledHeartIcon from \"../icons/FilledHeartIcon\";\nimport styles from \"./Like.module.scss\";\n\ninterface props {\n  isActive: boolean,\n  handler: () => void,\n  heartSize: number,\n  fontSize: number,\n  value: number\n}\n\nconst Like: FC<props> = ({isActive, handler, heartSize, value, fontSize}) => {\n  const [color, setColor] = useState(\"rgb(40, 40, 40)\");\n\n  useEffect(() => {\n    if (isActive) {\n      setColor(\"rgb(237, 73, 86)\")\n    }\n  }, [isActive, color])\n\n  return (\n    <>\n      {isActive !== undefined &&\n        <div\n          className={isActive ? styles.container_active : styles.container}\n          onMouseEnter={() => setColor(\"rgb(160, 160, 160)\")}\n          onMouseLeave={() => setColor(\"rgb(40, 40, 40)\")}\n          onClick={() => handler()}\n        >\n          <div\n            className={styles.like}\n            style={{\n              width: `${heartSize}px`,\n              height: `${heartSize}px`\n            }}\n          >\n            <div className={styles.heart_container}>\n              {isActive ?\n                <FilledHeartIcon\n                  className={styles.filled_heart}\n                  size={heartSize}\n                  color=\"rgb(237, 73, 86)\"\n                />\n                :\n                <HeartIcon\n                  className={styles.heart}\n                  size={heartSize}\n                  color={color}\n                />\n              }\n            </div>\n          </div>\n          <div className={styles.value} style={{fontSize: `${fontSize}px`}}>{value}</div>\n        </div>\n      }\n    </>\n  );\n}\n\nexport default Like;\n","import {useState} from \"react\";\nimport {dislikeComment, getCommentAnswers} from \"api/comment\";\nimport {useAppDispatch, useAppSelector} from \"hooks/redux\";\nimport { comment } from 'types/comment';\nimport { commentsReducer } from \"context/commentsReducer\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst CommentLogic = (comment: comment) => {\n  const [page, setPage] = useState<number>(0);\n  const [hasNextPage, setHasNextPage] = useState<boolean>(true);\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const isAuth = useAppSelector(state => state.authReducer.isAuth);\n  const navigate = useNavigate();\n\n  const {\n    addAnswers,\n    showAnswers,\n    likeComment\n  } = commentsReducer.actions;\n\n  const like = async () => {\n    if (!isAuth) {\n      navigate(\"/auth/login\");\n      return;\n    }\n\n    dispatch(likeComment(comment.id));\n\n    if (comment.isLiked) {\n      await dislikeComment(comment.id);\n    } else {\n      await likeComment(comment.id);\n    }\n  }\n\n  const getAnswers = async () => {\n    setIsFetching(true);\n    const res = await getCommentAnswers(comment.id, page);\n    const data = res.data;\n\n    dispatch(addAnswers({\n      commentId: comment.id,\n      comments: data.comments\n    }));\n\n    if (data.hasNextPage) {\n      setPage(prev => prev + 1);\n    } else {\n      setHasNextPage(false);\n    }\n\n    setIsFetching(false);\n  }\n\n  const showComments = async () => {\n    if (hasNextPage) {\n      getAnswers();\n    }\n    dispatch(showAnswers(comment.id));\n  }\n\n  return {\n    isFetching,\n    like,\n    showComments,\n    hasNextPage,\n    getAnswers\n  }\n}\n\nexport default CommentLogic;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Comment_container__aXVT+\",\"header\":\"Comment_header__PCH0v\",\"info\":\"Comment_info__Dddrk\",\"avatar\":\"Comment_avatar__tA0fT\",\"username\":\"Comment_username__8KOOp\",\"like\":\"Comment_like__8hbhw\",\"text\":\"Comment_text__upZZV\",\"footer\":\"Comment_footer__nKZ4S\",\"date\":\"Comment_date__bkZuW\",\"answer\":\"Comment_answer__wqb4e\",\"show_answers\":\"Comment_show_answers__zTWjn\",\"answers\":\"Comment_answers__N+o8n\",\"more_answers\":\"Comment_more_answers__bsZ2o\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Answer_container__4qoP2\",\"header\":\"Answer_header__2YUTX\",\"info\":\"Answer_info__Cs9nb\",\"avatar\":\"Answer_avatar__zj8Z8\",\"username\":\"Answer_username__5MEbP\",\"like\":\"Answer_like__cOKw4\",\"text\":\"Answer_text__5n+vS\",\"footer\":\"Answer_footer__izjCi\",\"date\":\"Answer_date__SE8VH\",\"answer\":\"Answer_answer__gaTkD\",\"show_answers\":\"Answer_show_answers__uIUmK\",\"answers\":\"Answer_answers__Y+KN4\",\"more_answers\":\"Answer_more_answers__FTntY\"};","import {FC} from \"react\";\nimport {answer} from \"types/comment\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport Like from \"components/Like\";\nimport {dislikeComment, likeComment} from \"api/comment\";\nimport {useAppDispatch, useAppSelector} from \"hooks/redux\";\nimport {commentsReducer} from \"context/commentsReducer\";\nimport styles from \"./Answer.module.scss\";\n\ninterface props {\n  answer: answer,\n  onAnswer: (id: number, username: string) => void;\n}\n\nconst Answer: FC<props> = ({ answer, onAnswer }) => {\n  const isAuth = useAppSelector(state => state.authReducer.isAuth);\n  const dispatch = useAppDispatch();\n  const { likeAnswer } = commentsReducer.actions;\n  const navigate = useNavigate();\n\n  const like = async () => {\n    if (!isAuth) {\n      navigate(\"/auth/navigate\");\n      return;\n    }\n\n    dispatch(likeAnswer(answer.id));\n\n    if (answer.isLiked) {\n      await dislikeComment(answer.id);\n    } else {\n      await likeComment(answer.id);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Link\n        className={styles.avatar}\n        style={{'backgroundImage': `url(http://127.0.0.1:8000${answer.user.avatar})`}}\n        to={`/profile/${answer.user.username}`}\n      />\n      <div className={styles.info}>\n        <div className={styles.header}>\n          <Link\n            className={styles.username}\n            to={`/profile/${answer.user.username}`}\n          >\n            {answer.user.username}\n          </Link>\n          <div className={styles.like}>\n            <Like\n              isActive={answer.isLiked}\n              handler={like}\n              heartSize={12}\n              fontSize={12}\n              value={answer.likes}\n            />\n          </div>\n        </div>\n        <div className={styles.text}>\n          {answer.text}\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.date}>\n            {answer.published_at}\n          </div>\n          <div\n            className={styles.answer}\n            onClick={() => onAnswer(answer.answer_to, answer.user.username)}\n          >\n            Ответить\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Answer;\n","import Answer from \"./Answer\";\n\nexport default Answer;\n","import Comment from \"./Comment\";\n\nexport default Comment;","import { FC } from 'react';\nimport Like from 'components/Like';\nimport { comment, answer } from 'types/comment';\nimport CommentLogic from \"./CommentLogic\";\nimport styles from \"./Comment.module.scss\";\nimport {Link} from \"react-router-dom\";\nimport Answer from \"./Answer\";\nimport PlusIcon from \"components/icons/PlusIcon\";\n\ninterface props {\n  comment: comment,\n  onAnswer: (id: number, username: string) => void\n}\n\nconst Comment: FC<props> = ({ comment, onAnswer }) => {\n  const {\n    like,\n    getAnswers,\n    isFetching,\n    hasNextPage,\n    showComments\n  } = CommentLogic(comment);\n\n  return (\n    <div className={styles.container}>\n      <Link className={styles.avatar}\n        style={{'backgroundImage': `url(http://127.0.0.1:8000${comment.user.avatar})`}}\n        to={`/profile/${comment.user.username}`}\n      />\n      <div className={styles.info}>\n        <div className={styles.header}>\n          <Link\n            className={styles.username}\n            to={`/profile/${comment.user.username}`}\n          >\n            {comment.user.username}\n          </Link>\n          <div className={styles.like}>\n            <Like\n              isActive={comment.isLiked}\n              handler={like}\n              heartSize={12}\n              fontSize={12}\n              value={comment.likes}\n            />\n          </div>\n        </div>\n        <div className={styles.text}>\n          {comment.text}\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.date}>\n            {comment.published_at}\n          </div>\n          <div\n            className={styles.answer}\n            onClick={() => onAnswer(comment.id, comment.user.username)}\n          >\n            Ответить\n          </div>\n        </div>\n        {comment.comments_count !== 0 && comment.comments_count &&\n          <div className={styles.answers}>\n            {comment.isShowedAnswers ?\n              <>\n                {comment.answers!.map((answer: answer, index: number) => {\n                  return <Answer\n                    answer={answer}\n                    onAnswer={onAnswer}\n                    key={index}\n                  />\n                })}\n                {hasNextPage && !isFetching &&\n                  <div\n                    className={styles.more_answers}\n                    onClick={() => getAnswers()}\n                  >\n                    <PlusIcon size={25} color=\"rgb(40, 40, 40)\" />Загрузить ещё\n                  </div>\n                }\n              </>\n              :\n              <div\n                className={styles.show_answers}\n                onClick={() => showComments()}\n              >\n                Показать ответы ({comment.comments_count})\n              </div>\n            }\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n"],"names":["className","size","color","fill","role","viewBox","height","width","d","isActive","handler","heartSize","value","fontSize","useState","setColor","useEffect","undefined","styles","onMouseEnter","onMouseLeave","onClick","style","HeartIcon","comment","page","setPage","hasNextPage","setHasNextPage","isFetching","setIsFetching","dispatch","useAppDispatch","isAuth","useAppSelector","state","authReducer","navigate","useNavigate","commentsReducer","addAnswers","showAnswers","likeComment","like","id","isLiked","dislikeComment","getAnswers","getCommentAnswers","res","data","commentId","comments","prev","showComments","answer","onAnswer","likeAnswer","user","avatar","to","username","Like","likes","text","published_at","answer_to","CommentLogic","comments_count","isShowedAnswers","answers","map","index","PlusIcon"],"sourceRoot":""}